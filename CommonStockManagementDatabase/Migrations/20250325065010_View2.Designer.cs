// <auto-generated />
using System;
using CommonStockManagementDatabase.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommonStockManagementDatabase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325065010_View2")]
    partial class View2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CommonStockManagementDatabase.Context.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Designation")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Employee_Number")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURl")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Join_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NIC_no")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("TblUsers", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblAuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("longtext");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<string>("EntityName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblAuditTrails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblClient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Area")
                        .HasColumnType("longtext");

                    b.Property<string>("Cr")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dr")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURl")
                        .HasColumnType("longtext");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Nic")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("TblClients");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblCompanyDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TelPhone1")
                        .HasColumnType("longtext");

                    b.Property<string>("TelPhone2")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblDatabaseBackupHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DatabaseName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("TagDiscription")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("TblDatabaseBackupHistory");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblFixedAssets", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<double?>("Cost")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<int?>("FKSupplier_ID")
                        .HasColumnType("int")
                        .HasColumnName("FKSupplier_ID");

                    b.Property<int?>("GRNNo")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Naration")
                        .HasColumnType("longtext");

                    b.Property<string>("PerCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("double");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Warrent_ex")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("FKSupplier_ID");

                    b.ToTable("TblFixedAssets");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGINBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<int?>("GINId")
                        .HasColumnType("int")
                        .HasColumnName("GINId");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("GINId");

                    b.ToTable("TblGINBody");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGINBodyTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GINBodyNo")
                        .HasColumnType("int");

                    b.Property<int>("GINNo")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Sellingprice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UserID")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblGINBodyTemp");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGINHead", b =>
                {
                    b.Property<int>("GINId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GINId"));

                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("GINId");

                    b.HasIndex("FKLocationId");

                    b.ToTable("TblGINHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGRNBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Grnno")
                        .HasColumnType("int")
                        .HasColumnName("Grnno");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("Grnno");

                    b.ToTable("TblGRNBody");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGRNBodyTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Batch")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("GRnBodyNo")
                        .HasColumnType("int");

                    b.Property<int>("GRnNo")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Sellingprice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.Property<string>("UserID")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblGRNBodyTemp");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGRNHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<int?>("FKSupplier_ID")
                        .HasColumnType("int")
                        .HasColumnName("FKSupplier_ID");

                    b.Property<string>("GRNType")
                        .HasColumnType("longtext");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Pono")
                        .HasColumnType("int");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("FKSupplier_ID");

                    b.ToTable("TblGRNHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemBrandName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblItemBrandNames");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblItemCategories");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemModelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblItemModelTypes");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemRentalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("DayCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("FKHeadId")
                        .HasColumnType("int");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FKHeadId");

                    b.HasIndex("FKLocationId");

                    b.ToTable("TblItemRentalDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemRentalDetailsTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("DayCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("RentalItemBodyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UserID")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblItemRentalDetailsTemp");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemRentalHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AdvancePay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKClientId")
                        .HasColumnType("int")
                        .HasColumnName("FKClientId");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<decimal?>("Gross")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSettle")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("RentalEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RentalStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SysDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKClientId");

                    b.HasIndex("FKLocationId");

                    b.ToTable("TblItemRentalHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblItemUnits");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int?>("POSNO")
                        .HasColumnType("int")
                        .HasColumnName("POSNO");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("POSNO");

                    b.ToTable("TblPOSBody");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSBodyTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Sellingprice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.Property<string>("UserID")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblPOSBodyTemp");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKClientId")
                        .HasColumnType("int")
                        .HasColumnName("FKClientId");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKClientId");

                    b.HasIndex("FKLocationId");

                    b.ToTable("TblPOSHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSReturnBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("POSBodyKeyNo")
                        .HasColumnType("int");

                    b.Property<string>("POSInvoiceNO")
                        .HasColumnType("longtext");

                    b.Property<int?>("POSReturnNO")
                        .HasColumnType("int")
                        .HasColumnName("POSReturnNO");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("POSReturnNO");

                    b.ToTable("TblPOSReturnBody");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSReturnBodyTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<int>("POSBodyKeyNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Sellingprice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.Property<string>("UserID")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblPOSReturnBodyTemp");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSReturnHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKClientId")
                        .HasColumnType("int")
                        .HasColumnName("FKClientId");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("POSInvoiceNO")
                        .HasColumnType("longtext");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKClientId");

                    b.HasIndex("FKLocationId");

                    b.ToTable("TblPOSReturnHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPriceBackup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FkBrandId")
                        .HasColumnType("int")
                        .HasColumnName("FkBrandId");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FkCategoryId");

                    b.Property<int>("FkItemId")
                        .HasColumnType("int")
                        .HasColumnName("FkItemId");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LastSellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NewPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NewSellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentageLastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentageSellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PriceChangeBackupDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FkBrandId");

                    b.HasIndex("FkCategoryId");

                    b.HasIndex("FkItemId");

                    b.ToTable("TblPriceBackups");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStockReturnNoteBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("SRNno")
                        .HasColumnType("int")
                        .HasColumnName("SRNno");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("SRNno");

                    b.ToTable("TblStockReturnNoteBody");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStockReturnNoteBodyTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Batch")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<int>("SRnBodyNo")
                        .HasColumnType("int");

                    b.Property<int>("SRnNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Sellingprice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.Property<string>("UserID")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TblStockReturnNoteBodyTemp");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStockReturnNoteHead", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FKLocationId")
                        .HasColumnType("int")
                        .HasColumnName("FKLocationId");

                    b.Property<int?>("FKSupplier_ID")
                        .HasColumnType("int")
                        .HasColumnName("FKSupplier_ID");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<string>("SRNType")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("FKLocationId");

                    b.HasIndex("FKSupplier_ID");

                    b.ToTable("TblStockReturnNoteHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStock_Main", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FkBrandId")
                        .HasColumnType("int")
                        .HasColumnName("FkBrandId");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("FkCategoryId");

                    b.Property<int?>("FkModelTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FkModelTypeId");

                    b.Property<int>("FkUnitId")
                        .HasColumnType("int")
                        .HasColumnName("FkUnitId");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("FkBrandId");

                    b.HasIndex("FkCategoryId");

                    b.HasIndex("FkModelTypeId");

                    b.HasIndex("FkUnitId");

                    b.ToTable("TblStock_Main");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("AdvanceCreditorLedger")
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext");

                    b.Property<string>("CreditorLedger")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LedgerCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<int?>("TblSupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("TblSupplierID");

                    b.ToTable("TblSupplier");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplierDueReturnValue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FksupplierID")
                        .HasColumnType("int")
                        .HasColumnName("FksupplierID");

                    b.Property<string>("Ref_invoice")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("FksupplierID");

                    b.ToTable("TblSupplierDueReturnValue");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplierPayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FKSupplierID")
                        .HasColumnType("int")
                        .HasColumnName("FKSupplierID");

                    b.Property<int>("GRNNo")
                        .HasColumnType("int");

                    b.Property<double>("Pay")
                        .HasColumnType("double");

                    b.Property<string>("Ref_invoive")
                        .HasColumnType("longtext");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("FKSupplierID");

                    b.ToTable("TblSupplierPayment");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VWAllActiveANDAvailableItemList", b =>
                {
                    b.Property<decimal?>("BalanceQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<int?>("FkBrandId")
                        .HasColumnType("int");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FkUnitId")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("MaxLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VWAllActiveANDAvailableItemList", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VWAllActiveANDAvailableItemListForSupplierreturn", b =>
                {
                    b.Property<decimal?>("BalanceQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<int?>("FkBrandId")
                        .HasColumnType("int");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FkUnitId")
                        .HasColumnType("int");

                    b.Property<string>("GRNRefInv")
                        .HasColumnType("longtext");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsItemCode")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("MaxLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PurchaseQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PurchaseQuantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ReorderLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RetrunQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SRNRefInv")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VWAllActiveANDAvailableItemListForSupplierreturn", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VWAllActiveItemList", b =>
                {
                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<int?>("FkBrandId")
                        .HasColumnType("int");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FkUnitId")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VWAllActiveItemList", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VWAllActiveItemReorderLevelList", b =>
                {
                    b.Property<decimal?>("BalanceQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<int?>("FkBrandId")
                        .HasColumnType("int");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FkUnitId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("MaxLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderLevel")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VWAllActiveItemReorderLevelList", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VWListClient", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Cr")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dr")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("ImageURl")
                        .HasColumnType("longtext");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Nic")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VWListClient", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.ViewAllPOsInvoiceItem", b =>
                {
                    b.Property<int>("BodyId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("INVNo")
                        .HasColumnType("longtext");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qtypiece")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ReturnQTY")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UnitName")
                        .HasColumnType("longtext");

                    b.Property<string>("UnitSize")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("ViewAllPOsInvoiceItem", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.ViewAllPOsInvoiceItemForReport", b =>
                {
                    b.Property<int>("BodyId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("DisCount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("INVNo")
                        .HasColumnType("longtext");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ReturnQTY")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("ViewAllPOsInvoiceItemForReport", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.ViewAllPOsInvoiceItemForReportPage", b =>
                {
                    b.Property<int>("BodyId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("FreeQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("INVNo")
                        .HasColumnType("longtext");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("longtext");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("LocationName")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ReturnDisCount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ReturnQTY")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SalesCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SalesDisCount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SalesReturn")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("TotalQty")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("ViewAllPOsInvoiceItemForReportPage", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.ViewAllPurcheseAndRevenue", b =>
                {
                    b.Property<int>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("NetProfit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PurcheseCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PurcheseMONTH")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PurcheseReturnCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SalesCost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SalesReturnCost")
                        .HasColumnType("decimal(65,30)");

                    b.ToTable((string)null);

                    b.ToView("ViewAllPurcheseAndRevenue", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwAllPriceBackupHistory", b =>
                {
                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<int>("FkBrandId")
                        .HasColumnType("int");

                    b.Property<int>("FkCategoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LastSellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NewPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NewSellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentageLastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PercentageSellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PriceChangeBackupDate")
                        .HasColumnType("datetime(6)");

                    b.ToTable((string)null);

                    b.ToView("VwAllPriceBackupHistory", (string)null);

                    b.ToSqlQuery("SELECT \r\n                            Category.Name AS CategoryName,\r\n                            brand.Name AS BrandName,\r\n                            MAX(Backuptable.LastPurchasePrice) AS LastPurchasePrice,\r\n                            MAX(Backuptable.LastSellingPrice) AS LastSellingPrice,\r\n                            MAX(Backuptable.NewPurchasePrice) AS NewPurchasePrice,\r\n                            MAX(Backuptable.NewSellingPrice) AS NewSellingPrice,\r\n                            Backuptable.FkCategoryId,\r\n                            Backuptable.FkBrandId,\r\n                            Backuptable.PriceChangeBackupDate,\r\n                            MAX(Backuptable.PercentageLastPurchasePrice) AS PercentageLastPurchasePrice,\r\n                            MAX(Backuptable.PercentageSellingPrice) AS PercentageSellingPrice\r\n                        FROM TblPriceBackups AS Backuptable\r\n                        INNER JOIN TblItemCategories AS Category ON Backuptable.FkCategoryId = Category.Id\r\n                        INNER JOIN TblItemBrandNames AS brand ON Backuptable.FkBrandId = brand.Id\r\n                        GROUP BY \r\n                            Backuptable.PriceChangeBackupDate,\r\n                            Backuptable.FkCategoryId,\r\n                            Backuptable.FkBrandId,\r\n                            Category.Name,\r\n                            brand.Name\r\n                          ");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwBestCustomers", b =>
                {
                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<string>("Customer")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FKClientId")
                        .HasColumnType("int");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwBestCustomers", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListGINHead", b =>
                {
                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GINId")
                        .HasColumnType("int");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListGINHead", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListGRNHeads", b =>
                {
                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FKSupplier_ID")
                        .HasColumnType("int");

                    b.Property<string>("GRNType")
                        .HasColumnType("longtext");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<int>("Pono")
                        .HasColumnType("int");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<string>("Supplier")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListGRNHeads", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListItemBrand", b =>
                {
                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListItemBrand", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListItemCategory", b =>
                {
                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListItemCategory", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListItemModelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("VwListItemModelType");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListItemUnit", b =>
                {
                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListItemUnit", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListPOSHeads", b =>
                {
                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<string>("Customer")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FKClientId")
                        .HasColumnType("int");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListPOSHeads", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListPOSReturnHeads", b =>
                {
                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<string>("Customer")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FKClientId")
                        .HasColumnType("int");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListPOSReturnHeads", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListSRNHeads", b =>
                {
                    b.Property<string>("Created")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<double?>("Discount")
                        .HasColumnType("double");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FKSupplier_ID")
                        .HasColumnType("int");

                    b.Property<double?>("Gross")
                        .HasColumnType("double");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("RefInv")
                        .HasColumnType("longtext");

                    b.Property<string>("SRNType")
                        .HasColumnType("longtext");

                    b.Property<string>("Supplier")
                        .HasColumnType("longtext");

                    b.Property<double?>("Total")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListSRNHeads", (string)null);
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Model.VwListSupplier", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("AdvanceCreditorLedger")
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext");

                    b.Property<string>("CreditorLedger")
                        .HasColumnType("longtext");

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Fax")
                        .HasColumnType("longtext");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("ImageURl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LedgerCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("Tel")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.ToTable((string)null);

                    b.ToView("VwListSupplier", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Tbl_Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "bf8f6d4e-86cb-483a-9b74-e9d80733077f",
                            ConcurrencyStamp = "81f756e6-77d7-4982-9864-ca2321ffc562",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "36c9d5b8-e498-4969-bad4-96a4aef6dd00",
                            ConcurrencyStamp = "b4bdef3a-30ad-44c7-9f18-5c3a4d1167e1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "36c9d5b8-e498-4969-kuiq-96a4aef6dd00",
                            ConcurrencyStamp = "b4bdef3a-30ad-44c7-9f18-5c3a4d1167e1",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Tbl_Role_Claims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tbl_User_Claims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("Tbl_User_Login", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("Tbl_User_Role", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("Tbl_User_Token", (string)null);
                });

            modelBuilder.Entity("StockManagementApi.DatabaseConnection.TblEmailsetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Delete_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Delete_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Edit_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Edit_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("Isdelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("YourDomain")
                        .HasColumnType("longtext");

                    b.Property<string>("host")
                        .HasColumnType("longtext");

                    b.Property<int>("port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tblemailsetting");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.AppUser", b =>
                {
                    b.OwnsMany("CommonStockManagementDatabase.Model.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<string>("AppUserId")
                                .HasColumnType("varchar(255)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime(6)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("Token")
                                .HasColumnType("longtext");

                            b1.HasKey("AppUserId", "Id");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner()
                                .HasForeignKey("AppUserId");
                        });

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblFixedAssets", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblSupplier", "FKTblSupplier")
                        .WithMany("FKTblFixedAssets")
                        .HasForeignKey("FKSupplier_ID");

                    b.Navigation("FKTblSupplier");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGINBody", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblGINHead", "TblGRNHead")
                        .WithMany("TblGINBodies")
                        .HasForeignKey("GINId");

                    b.Navigation("TblCompanyDetails");

                    b.Navigation("TblGRNHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGINHead", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGRNBody", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblGRNHead", "TblGRNHead")
                        .WithMany("TblGRNBodies")
                        .HasForeignKey("Grnno");

                    b.Navigation("TblCompanyDetails");

                    b.Navigation("TblGRNHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGRNHead", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblSupplier", "FKTblSupplier")
                        .WithMany()
                        .HasForeignKey("FKSupplier_ID");

                    b.Navigation("FKTblSupplier");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemRentalDetails", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblItemRentalHead", "TblItemRentalHead")
                        .WithMany()
                        .HasForeignKey("FKHeadId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.Navigation("TblCompanyDetails");

                    b.Navigation("TblItemRentalHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemRentalHead", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblClient", "TblClients")
                        .WithMany()
                        .HasForeignKey("FKClientId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.Navigation("TblClients");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSBody", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblPOSHead", "TblPOSHead")
                        .WithMany("TblPOSBodies")
                        .HasForeignKey("POSNO");

                    b.Navigation("TblCompanyDetails");

                    b.Navigation("TblPOSHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSHead", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblClient", "TblClients")
                        .WithMany()
                        .HasForeignKey("FKClientId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.Navigation("TblClients");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSReturnBody", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblPOSReturnHead", "TblPOSHead")
                        .WithMany()
                        .HasForeignKey("POSReturnNO");

                    b.Navigation("TblCompanyDetails");

                    b.Navigation("TblPOSHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSReturnHead", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblClient", "TblClients")
                        .WithMany()
                        .HasForeignKey("FKClientId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.Navigation("TblClients");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPriceBackup", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblItemBrandName", "TblItemBrandName")
                        .WithMany()
                        .HasForeignKey("FkBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommonStockManagementDatabase.Context.TblItemCategory", "TblItemCategory")
                        .WithMany()
                        .HasForeignKey("FkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommonStockManagementDatabase.Context.TblStock_Main", "TblItem")
                        .WithMany()
                        .HasForeignKey("FkItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblItem");

                    b.Navigation("TblItemBrandName");

                    b.Navigation("TblItemCategory");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStockReturnNoteBody", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblStockReturnNoteHead", "TblStockRequestNoteHead")
                        .WithMany("TblStockRequestNoteBodies")
                        .HasForeignKey("SRNno");

                    b.Navigation("TblCompanyDetails");

                    b.Navigation("TblStockRequestNoteHead");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStockReturnNoteHead", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblCompanyDetails", "TblCompanyDetails")
                        .WithMany()
                        .HasForeignKey("FKLocationId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblSupplier", "FKTblSupplier")
                        .WithMany()
                        .HasForeignKey("FKSupplier_ID");

                    b.Navigation("FKTblSupplier");

                    b.Navigation("TblCompanyDetails");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStock_Main", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblItemBrandName", "TblItemBrandName")
                        .WithMany("TblItems")
                        .HasForeignKey("FkBrandId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblItemCategory", "TblItemCategory")
                        .WithMany("TblItems")
                        .HasForeignKey("FkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommonStockManagementDatabase.Context.TblItemModelType", "TblItemModelType")
                        .WithMany("TblItems")
                        .HasForeignKey("FkModelTypeId");

                    b.HasOne("CommonStockManagementDatabase.Context.TblItemUnit", "TblItemUnit")
                        .WithMany("TblItems")
                        .HasForeignKey("FkUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblItemBrandName");

                    b.Navigation("TblItemCategory");

                    b.Navigation("TblItemModelType");

                    b.Navigation("TblItemUnit");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplier", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblSupplier", null)
                        .WithMany("FkSuppliers")
                        .HasForeignKey("TblSupplierID");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplierDueReturnValue", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblSupplier", "TblSupplier")
                        .WithMany("TblSupplierDueReturnValues")
                        .HasForeignKey("FksupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblSupplier");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplierPayment", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.TblSupplier", "TblSupplier")
                        .WithMany("TblSupplierPayments")
                        .HasForeignKey("FKSupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblSupplier");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommonStockManagementDatabase.Context.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CommonStockManagementDatabase.Context.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGINHead", b =>
                {
                    b.Navigation("TblGINBodies");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblGRNHead", b =>
                {
                    b.Navigation("TblGRNBodies");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemBrandName", b =>
                {
                    b.Navigation("TblItems");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemCategory", b =>
                {
                    b.Navigation("TblItems");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemModelType", b =>
                {
                    b.Navigation("TblItems");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblItemUnit", b =>
                {
                    b.Navigation("TblItems");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblPOSHead", b =>
                {
                    b.Navigation("TblPOSBodies");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblStockReturnNoteHead", b =>
                {
                    b.Navigation("TblStockRequestNoteBodies");
                });

            modelBuilder.Entity("CommonStockManagementDatabase.Context.TblSupplier", b =>
                {
                    b.Navigation("FKTblFixedAssets");

                    b.Navigation("FkSuppliers");

                    b.Navigation("TblSupplierDueReturnValues");

                    b.Navigation("TblSupplierPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
